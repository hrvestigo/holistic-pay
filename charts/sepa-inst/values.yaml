nameOverride: ''
image:
  registry: docker.io
  pullPolicy: IfNotPresent
  app:
    registry: null
    imageLocation: null
    tag: ''
    pullPolicy: null
  liquibase:
    registry: null
    imageLocation: null
    tag: 1.2.0
    pullPolicy: null
imagePullSecrets: []
env:
  type: ''
  label: ''
datasource:
  host: ''
  port: ''
  dbName: ''
  user: ''
  globalSchemaPrefix: wo
  connTimeout: 60000
  maxPoolSize: 2
  minIdle: 0
  connectionParams: {}
liquibase:
  enabled: true
  syncOnly: false
  user: ''
  role: ''
  replicationRole: ''
  resources: {}
members:
- businessUnit: ''
  applicationMember: ''
  memberSign: ''
  liquibase:
    role: ''
    replicationRole: ''
  datasource:
    globalSchema: false
    host: ''
    port: ''
    dbName: ''
    user: ''
    password: ''
    connTimeout: ''
    maxPoolSize: ''
    minIdle: 0
kafka:
  user: ''
  servers: ''
  saslMechanism: PLAIN
  securityProtocol: SASL_SSL
  sslEndpointIdentAlg: HTTPS
  schemaRegistry:
    credSource: USER_INFO
    user: ''
    url: ''
  topics:
    paymentorderflow:
      name: hr.vestigo.hp.paymentorderflow
      consumerGroup: hr.vestigo.hp.sepins.paymentorderflow
    originalpaymentmessage:
      name: hr.vestigo.hp.originalpaymentmessage
    paymentordereventin:
      name: hr.vestigo.hp.paymentordereventin
    paymentorderincoming:
      name: hr.vestigo.hp.paymentorderincoming
    paymentordereventflow:
      name: hr.vestigo.hp.paymentordereventflow
      consumerGroup: hr.vestigo.hp.paymentordereventflow
    sepainstmsgcheck:
      name: hr.vestigo.hp.sepainstmsgcheck
      consumerGroup: hr.vestigo.hp.sepainstmsgcheck
csm:
  id: NKS9999998
  url: ''
  msgPath: /instant-core/api/msg
  xsdCheck: inout
  config:
    camt_029:
      xsdCheck: inherit
    camt_056:
      xsdCheck: inherit
    izvj:
      xsdCheck: inherit
    pacs_002_negative:
      xsdCheck: inherit
    pacs_002_positive:
      xsdCheck: inherit
      responseMsgTimeout: 25s
      requestMsgRetry: 10;5s
    pacs_002_nksinst:
      xsdCheck: inherit
    pacs_004:
      xsdCheck: inherit
    pacs_008:
      xsdCheck: inherit
      responseMsgTimeout: 25s
    pacs_028:
      xsdCheck: inherit
      requestMsgRetry: 10;5s
    pacs_028_056:
      xsdCheck: inherit
oauth2:
  enabled: false
  resourceUri: ''
  authorizationPrefix: ''
request:
  sanitization:
    enabled: true
response:
  encoding:
    enabled: false
timezone: ''
secret:
  decryptionKey: ''
  datasourcePassword: ''
  kafkaPassword: ''
  kafkaSchemaRegistryPassword: ''
  liquibasePassword: ''
  trustStorePassword: ''
  keyStorePassword: ''
logger:
  level:
    kafka: DEBUG
    kafkaCore: INFO
    rest: DEBUG
    database: DEBUG
    databaseParam: TRACE
    businessLogic: DEBUG
    health: DEBUG
    general: DEBUG
  logToFile: false
  rollingFileAppender: false
  logDir: /var/log/app
  logDirMount:
    enabled: false
healthStatusDownReturnCode: '418'
javaOpts: -Xms256M -Xmx256M
podAnnotations: {}
deploymentAnnotations: {}
serviceAnnotations: {}
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
securityContext: {}
service:
  enabled: true
  type: ClusterIP
  port: 8443
  nodePort: ''
  clusterIP: ''
  loadBalancerIP: ''
  loadBalancerSourceRanges: []
  annotations: {}
  labels: {}
ingress:
  enabled: false
  className: ''
  annotations: {}
  hosts: []
  tls: []
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 50m
    memory: 256Mi
initContainers: []
nodeSelector: {}
tolerations: []
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/arch
          operator: In
          values:
          - amd64
        - key: kubernetes.io/os
          operator: In
          values:
          - linux
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - sepa-inst
        topologyKey: kubernetes.io/hostname
deployment:
  replicaCount: 1
  annotations: {}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 60
  terminationGracePeriodSeconds: 60
  restartPolicy: Always
  readinessProbe:
    initialDelaySeconds: 10
    periodSeconds: 60
    timeoutSeconds: 10
    successThreshold: 1
    failureThreshold: 2
    httpGet:
      path: /health/readiness
      port: http
      scheme: HTTPS
  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 60
    timeoutSeconds: 10
    failureThreshold: 3
    httpGet:
      path: /health/liveness
      port: http
      scheme: HTTPS
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
mountServerCertFromSecret:
  enabled: false
  secretName: ''
  certPath: ''
  keyPath: ''
mountKeyStoreFromSecret:
  enabled: false
  secretName: ''
  keyStoreName: ''
  keyStoreType: JKS
mountTrustStoreFromSecret:
  enabled: false
  secretName: ''
  trustStoreName: ''
  trustStoreType: JKS
mountCaFromSecret:
  enabled: false
  secretName: ''
customVolumes: []
customMounts: []
customEnv: []
