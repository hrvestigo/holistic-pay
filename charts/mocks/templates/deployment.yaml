apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mocks.name" . }}
  labels:
    {{- include "mocks.labels" . | nindent 4 }}
{{- with .Values.deployment.labels }}
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.deployment.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.deployment.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mocks.selectorLabels" . | nindent 6 }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  minReadySeconds: {{ .Values.deployment.minReadySeconds }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "mocks.labels" . | nindent 8 }}
    spec:
      automountServiceAccountToken: false
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.deployment.terminationGracePeriodSeconds }}
      restartPolicy: {{ .Values.deployment.restartPolicy }}
      {{- if or .Values.liquibase.enabled .Values.initContainers }}
      initContainers:
        {{- with .Values.initContainers }}
          {{- toYaml . | trim | nindent 8 }}
          {{- end }}
          {{- if .Values.liquibase.enabled }}
          {{- include "mocks.liquibase.initContainer" . | trim | nindent 8 }}
          {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "mocks.app.repository" . }}:{{ .Values.image.app.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ include "mocks.app.imagePullPolicy" . }}
          env:
            {{- if .Values.timezone }}
            - name: TZ
              value: {{ .Values.timezone }}
            {{- end }}
            - name: SERVER_PORT
              value: "8443"
            - name: MANAGEMENT_TRACING_SAMPLING_PROBABILITY
              value: "{{ .Values.tracing.samplingProbability | default 0.0 }}"
            - name: MANAGEMENT_OTLP_TRACING_ENDPOINT
              value: "{{ .Values.tracing.otlpEndpoint }}"
            - name: IBM_MQ_AUTOCONFIGURE
              value: {{ .Values.ibmMq.autoConfigure | quote }}
            - name: IBM_MQ_QUEUEMANAGER
              value: {{ .Values.ibmMq.queueManager | quote }}
            - name: IBM_MQ_CHANNEL
              value: {{ .Values.ibmMq.channel | quote }}
            - name: IBM_MQ_CONNNAME
              value: {{ .Values.ibmMq.connName | quote }}
            - name: IBM_MQ_USER
              value: {{ .Values.ibmMq.user | quote }}
            - name: IBM_MQ_NORKOMCALL_QUEUENAME
              value: {{ .Values.ibmMq.norkomcall.queueName | quote }}
            - name: IBM_MQ_NORKOMRESPONSE_QUEUENAME
              value: {{ .Values.ibmMq.norkomresponse.queueName | quote }}
            - name: IBM_MQ_SSLCIPHERSUITE
              value: {{ .Values.ibmMq.sslCiphersuite | quote }}
            - name: ATOMIKOS_PROPERTIES_LOGBASEDIR
              value: /var/log/app
            - name: SPRING_JTA_ATOMIKOS_DATASOURCE_BORROWCONNECTIONTIMEOUT
              value: "{{ .Values.atomikos.borrowConnectionTimeout | int }}"
            - name: SPRING_JTA_ATOMIKOS_DATASOURCE_MAXIDLETIME
              value: "{{ .Values.atomikos.maxIdleTime | int }}"
            - name: SPRING_JTA_ATOMIKOS_DATASOURCE_MAXLIFETIME
              value: "{{ .Values.atomikos.maxLifetime | int }}"
            - name: SPRING_JTA_ATOMIKOS_DATASOURCE_MAXPOOLSIZE
              value: "{{ .Values.atomikos.maxPoolSize | int }}"
            - name: SPRING_JTA_ATOMIKOS_DATASOURCE_MINPOOLSIZE
              value: "{{ .Values.atomikos.minPoolSize | int }}"
            - name: SPRING_JTA_ATOMIKOS_PROPERTIES_DEFAULTJTATIMEOUT
              value: "{{ .Values.atomikos.jtaTimeout | int }}"
            - name: SPRING_JTA_ATOMIKOS_CONNECTIONFACTORY_MAXIDLETIME
              value: "{{ .Values.atomikos.connectionFactory.maxIdleTime | int }}"
            - name: SPRING_JTA_ATOMIKOS_CONNECTIONFACTORY_MAXLIFETIME
              value: "{{ .Values.atomikos.connectionFactory.maxLifeTime | int }}"
            - name: SPRING_JTA_ATOMIKOS_CONNECTIONFACTORY_MAXPOOLSIZE
              value: "{{ .Values.atomikos.connectionFactory.maxPoolSize | int }}"
            - name: SPRING_JTA_ATOMIKOS_CONNECTIONFACTORY_MINPOOLSIZE
              value: "{{ .Values.atomikos.connectionFactory.minPoolSize | int }}"
            - name: EXTERNAL_CORE_SYSTEM_MEMBER_SIGN_DEFAULT
              value: {{ .Values.external.core.system.member.sign.default | quote }}
            {{ - if .Values.grpc.server.enabled }}
            - name: GRPC_SERVER_PORT
              value: {{ .Values.grpc.server.port | default "9090" | quote }}
            - name: GRPC_SERVER_SECURITY_ENABLED
              value: {{ .Values.grpc.server.security.enabled | default "false" | quote }}
                {{ - if .Values.grpc.server.security.enabled }}
            - name: GRPC_SERVER_SECURITY_CERTIFICATECHAIN
              value: "file:{{ .Values.grpc.server.security.certificate }}"
            - name: GRPC_SERVER_SECURITY_PRIVATEKEY
              value: "file:{{ .Values.grpc.server.security.key }}"
                {{ - end }}
            {{ - end }}
            - name: SEPA_INST_URL
              value: {{ .Values.sepa.inst.url | quote }}
            {{- if .Values.security.oauth2.outbound.enabled }}
            - name: SECURITY_OUTBOUND_OAUTH2_TOKEN
              value: {{ .Values.security.oauth2.outbound.token | quote }}
            - name: SECURITY_OAUTH2_PROVIDER
              value: {{ .Values.security.oauth2.provider | quote }}
            - name: SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUERURI
              value: {{ .Values.security.oauth2.client.provider.keycloak.issuerUri | quote }}
            - name: SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_TOKENURI
              value: {{ .Values.security.oauth2.client.provider.keycloak.tokenUri | quote }}
            - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENTID
              value: {{ .Values.security.oauth2.client.registration.keycloak.clientId | quote }}
            - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENTSECRET
              value: {{ .Values.security.oauth2.client.registration.keycloak.clientSecret | quote }}
            - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_SCOPE
              value: {{ .Values.security.oauth2.client.registration.keycloak.scope | quote }}
            {{- end }}
            - name: SPRING_DATASOURCE_XA_PROPERTIES_USER
              value: {{ required "Please specify DB user in members.datasource.user" .Values.datasource.user | quote }}
            - name: SPRING_DATASOURCE_XA_PROPERTIES_SERVERNAME
              value: {{ required "Please specify DB server name in datasource.serverName" .Values.datasource.serverName | quote }}
            - name: SPRING_DATASOURCE_XA_PROPERTIES_DATABASENAME
              value: {{ required "Please specify DB database name in datasource.databaseName" .Values.datasource.databaseName | quote }}
            - name: SPRING_DATASOURCE_XA_PROPERTIES_PORTNUMBER
              value: {{ required "Please specify DB port number in datasource.portNumber" .Values.datasource.portNumber | quote }}
            - name: SPRING_DATASOURCE_XA_PROPERTIES_CURRENTSCHEMA
              value: {{ required "Please specify DB current schema in datasource.currentSchema" .Values.datasource.currentSchema | quote }}
            {{- range $k, $v := .Values.members }}
            - name: SPRING_DATASOURCE_XA_PROPERTIES_USER_{{ .memberSign }}
              value: {{ required "Please specify DB user in datasource.user" $.Values.datasource.user | quote }}
            - name: SPRING_DATASOURCE_XA_PROPERTIES_SERVERNAME_{{ .memberSign }}
              value: {{ required "Please specify DB server name in datasource.serverName" $.Values.datasource.serverName | quote }}
            - name: SPRING_DATASOURCE_XA_PROPERTIES_DATABASENAME_{{ .memberSign }}
              value: {{ required "Please specify DB database name in datasource.databaseName" $.Values.datasource.databaseName | quote }}
            - name: SPRING_DATASOURCE_XA_PROPERTIES_PORTNUMBER_{{ .memberSign }}
              value: {{ required "Please specify DB port number in datasource.portNumber" $.Values.datasource.portNumber | quote }}
            - name: SPRING_DATASOURCE_XA_PROPERTIES_CURRENTSCHEMA_{{ .memberSign }}
              {{- if .datasource }}
              {{- if .datasource.globalSchema }}
              value: {{ required "Please specify members.businessUnit" .businessUnit | lower }}{{ required "Please specify global schema prefix in datasource.globalSchemaPrefix" $.Values.datasource.globalSchemaPrefix }}{{ include "mocks.dbSchema" $ }}{{ required "Please specify env.label" $.Values.env.label | lower }}{{ include "mocks.db.connectionParams" $ }}
                {{- else }}
              value: {{ required "Please specify members.businessUnit" .businessUnit | lower }}{{ required "Please specify members.applicationMember" .applicationMember | lower }}{{ include "mocks.dbSchema" $ }}{{ required "Please specify env.label" $.Values.env.label | lower }}{{ include "mocks.db.connectionParams" $ }}
                {{- end }}
              {{- end }}
            {{- end }}
            - name: MEMBERS
              value: {{ include "mocks.members" . }}
            - name: SPRING_KAFKA_PROPERTIES_SASL_MECHANISM
              value: {{ .Values.kafka.saslMechanism | quote }}
            - name: SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG
              value: >-
                org.apache.kafka.common.security.plain.PlainLoginModule required username=
                {{- required "Please specify Kafka user in kafka.user" .Values.kafka.user | quote }} password="${kafka.password}";
            - name: SPRING_KAFKA_PROPERTIES_BOOTSTRAP_SERVERS
              value: {{ required "Please specify Kafka bootstrap servers in kafka.servers" .Values.kafka.servers | quote }}
            - name: SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL
              value: {{ .Values.kafka.securityProtocol | quote }}
            - name: SPRING_KAFKA_PROPERTIES_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM
              value: {{ .Values.kafka.sslEndpointIdentAlg | quote }}
            - name: SPRING_KAFKA_PROPERTIES_BASIC_AUTH_CREDENTIALS_SOURCE
              value: {{ .Values.kafka.schemaRegistry.credSource | quote }}
            - name: SPRING_KAFKA_PROPERTIES_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO
              value: >-
                {{ required "Please specify Kafka Schema Registry user in kafka.schemaRegistry.user" .Values.kafka.schemaRegistry.user }}:${kafka.schemaregistry.password}
            - name: SPRING_KAFKA_PROPERTIES_SCHEMA_REGISTRY_URL
              value: {{ required "Please specify Kafka Schema Registry URL in kafka.schemaRegistry.url" .Values.kafka.schemaRegistry.url | quote }}
            {{- if (include "mocks.kafka.topics" .) }}
            {{- include "mocks.kafka.topics" . | indent 12 }}
            {{- end }}
            {{- if (include "mocks.application.config" .) }}
            {{- include "mocks.application.config" . | indent 12 }}
            {{- end }}
            - name: SERVER_SSL_KEYSTORE
              value: /tmp/tls.p12
            - name: SERVER_SSL_KEYSTORETYPE
              value: PKCS12
            - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
              value: loggers,health,prometheus
            - name: MANAGEMENT_ENDPOINTS_LOGGERS_ENABLED
              value: "true"
            - name: MANAGEMENT_ENDPOINTS_WEB_BASEPATH
              value: /
            - name: MANAGEMENT_HEALTH_PROBES_ENABLED
              value: "true"
            - name: MANAGEMENT_ENDPOINT_HEALTH_SHOWDETAILS
              value: always
            - name: MANAGEMENT_ENDPOINT_HEALTH_STATUS_HTTPMAPPING_DOWN
              value: {{ .Values.healthStatusDownReturnCode | quote }}
            - name: MANAGEMENT_ENDPOINT_HEALTH_GROUP_READINESS_INCLUDE
              {{- if .Values.datasource.enabled }}
              value: readinessState, db, kafka
              {{- end }}
            - name: SERVER_TOMCAT_ACCESSLOG_ENABLED
              value: {{ .Values.logger.logToFile | quote }}
            - name: SERVER_TOMCAT_ACCESSLOG_SUFFIX
              value: ".log"
            - name: SERVER_TOMCAT_ACCESSLOG_PREFIX
              value: access
            - name: SERVER_TOMCAT_BASEDIR
              {{- $logdir := .Values.logger.logDir | splitList "/" }}
              {{- if hasPrefix "/" .Values.logger.logDir }}
              value: "/{{ index $logdir 1 }}"
              {{- else }}
              value: "/{{ index $logdir 0 }}"
              {{- end }}
            - name: SERVER_TOMCAT_ACCESSLOG_FILEDATEFORMAT
              value: ""
            - name: SERVER_TOMCAT_ACCESSLOG_DIRECTORY
              {{- $logdir := .Values.logger.logDir | splitList "/" }}
              {{- if hasPrefix "/" .Values.logger.logDir }}
              {{- $rest := slice $logdir 2 | join "/" }}
              value: {{ $rest }}
              {{- else }}
              {{- $rest := slice $logdir 1 | join "/" }}
              value: {{ $rest }}
              {{- end }}
            - name: SERVER_TOMCAT_ACCESSLOG_PATTERN
              value: >-
                [%{yyyy-MM-dd HH:mm:ss.SSS}t] %h %l %u "%r" %s
            - name: SERVER_TOMCAT_ACCESSLOG_CONDITIONUNLESS
              value: access
            - name: LOGGING_CONFIG
              value: /usr/app/config/log4j2.xml
            - name: LOGGER_EXCLUDE_ENDPOINTS
              value: /, /health, /health/liveness, /health/readiness, /prometheus
            {{- if .Values.logger.databaseSlowQueryThreshold }}
            - name: SPRING_JPA_PROPERTIES_HIBERNATE_SESSION_EVENTS_LOG_LOG_QUERIES_SLOWER_THAN_MS
              value: {{ .Values.logger.databaseSlowQueryThreshold | quote }}
            {{- end }}
            - name: SECRET_PROPERTIES
              value: /mnt/k8s/secrets/password.conf
            - name: KAFKA_HEALTH_ENABLED
              value: "true"
            - name: JAVA_OPTS
              value: "{{ .Values.javaOpts }} -Dcom.ibm.mq.cfg.useIBMCipherMappings=false"
            {{- if (include "mocks.trustStoreEnv" .) -}}
            {{- include "mocks.trustStoreEnv" . | nindent 12 -}}
            {{- end }}
            {{- if .Values.mountKeyStoreFromSecret.enabled }}
            - name: SSL_KEY_STORE_FILE
              value: /mnt/k8s/key-store/{{ required "Please specify mTLS key store file name in mountKeyStoreFromSecret.keyStoreName" .Values.mountKeyStoreFromSecret.keyStoreName }}
            - name: SSL_KEY_STORE_TYPE
              value: {{ required "Please specify key store type in mountKeyStoreFromSecret.keyStoreType" .Values.mountKeyStoreFromSecret.keyStoreType }}
            {{- end }}
            {{- if .Values.oauth2.enabled }}
            - name: SECURITY_AUTHENTICATION
              value: oauth2
            - name: SECURITY_AUTHENTICATION_JWT_CONVERTER
              value: realm
            - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI
              value: {{ required "Please specify oAuth2 resource URI in oauth2.resourceUri" .Values.oauth2.resourceUri | quote }}
            {{- else }}
            - name: SECURITY_AUTHENTICATION
              value: none
            - name: SECURITY_AUTHENTICATION_JWT_CONVERTER
              value: ""
            - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI
              value: ""
            {{- end }}
            - name: REQUEST_BODY_SANITIZATION_ENABLED
              value: {{ .Values.request.sanitization.enabled | quote }}
            - name: REQUEST_HEADER_VALIDATION_ENABLED
              value: {{ .Values.request.header.validation.enabled | default "false" | quote }}
            - name: RESPONSE_BODY_ENCODING_ENABLED
              value: {{ .Values.response.encoding.enabled | default "false" | quote }}
            {{- if .Values.oauth2.authorizationPrefix }}
            - name: SECURITY_AUTHENTICATION_CLAIM_PREFIX
              value: {{ .Values.oauth2.authorizationPrefix | quote }}
            {{- end }}
            {{- with .Values.customEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8443
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.deployment.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.deployment.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- include "mocks.mounts" . | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- include "mocks.volumes" . | nindent 8 }}