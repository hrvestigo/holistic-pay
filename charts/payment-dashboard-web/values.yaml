# Default values for payment-dashboard-web.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""

image:
  registry: docker.io
  pullPolicy: IfNotPresent
  app:
    registry: # defaults to image.registry
    tag: "" # overrides the image tag whose default is the chart appVersion.
    pullPolicy: # defaults to image.pullPolicy

imagePullSecrets:
  - name: dockerhub-hrvestigo

apiGatewayUrl: ""

environmentName: "TEST"

appLocale: "hr"

backendUrl: ""

timezone: ""

podAnnotations: {}

deploymentAnnotations: {}

serviceAnnotations: {}

podSecurityContext:
  runAsNonRoot: false
  runAsUser: 1000
  runAsGroup: 1000

securityContext: {}

service:
  enabled: true
  type: ClusterIP
  port: 8443
  nodePort: ""
  clusterIP: ""
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  annotations: {}
  labels: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts: []
  tls: []

resources:
  limits:
    cpu: 500m
    memory: 64Mi
  requests:
    cpu: 50m
    memory: 16Mi

initContainers:
  - name: create-cacert
    securityContext:
      runAsUser: 0
      runAsGroup: 0
    image: hrvestigo/k8s-cert-init
    imagePullPolicy: Always
    command:
      - bash
      - -c
      - "APP_NAME=payment-dashboard-web && HOST_NAME=$APP_NAME && cd /etc/pki && ./VestigoContainerInfra_k8s.sh $HOST_NAME && cp ./VestigoContainerInfra/$APP_NAME.crt /var/tmp/cert.pem && cp ./VestigoContainerInfra/$APP_NAME.key /var/tmp/key.pem && chmod 664 /var/tmp/*"
    volumeMounts:
      - mountPath: /var/tmp
        name: server-cert

nodeSelector: {}

tolerations: []

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
                - amd64
            - key: kubernetes.io/os
              operator: In
              values:
                - linux
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - alc-collect
          topologyKey: kubernetes.io/hostname

deployment:
  replicaCount: 1
  annotations: {}
  labels: {}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 60
  terminationGracePeriodSeconds: 60
  restartPolicy: Always
  readinessProbe:
    initialDelaySeconds: 10
    periodSeconds: 60
    timeoutSeconds: 10
    successThreshold: 1
    failureThreshold: 2
    httpGet:
      path: /health/readiness
      port: http
      scheme: HTTPS
  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 60
    timeoutSeconds: 10
    failureThreshold: 3
    httpGet:
      path: /health/liveness
      port: http
      scheme: HTTPS

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

mountServerCertFromSecret:
  enabled: false
  secretName: ""
  certPath: ""
  keyPath: ""

customVolumes: []

customMounts: []

customEnv: []
